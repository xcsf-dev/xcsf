[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.ruff]
indent-width = 4
line-length = 88
target-version = "py39"
extend-include = ["*.ipynb"]

lint.select = [
  "ANN", # flake8-annotations
  "ARG", # flake8-unused-arguments
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "C90", # mccabe
#  "D",   # pydocstyle
  "DTZ", # flake8-datetimez
  "E",   # pycodestyle
  "EM",  # flake8-errmsg
  "ERA", # eradicate
  "F",   # Pyflakes
  "I",   # isort
  "ICN", # flake8-import-conventions
  "N",   # pep8-naming
  "PD",  # pandas-vet
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PL",  # Pylint
  "PLC", # Pylint
  "PLE", # Pylint
  "PLR", # Pylint
  "PLW", # Pylint
  "PT",  # flake8-pytest-style
  "Q",   # flake8-quotes
  "RET", # flake8-return
  "RUF100",  # Ruff-specific
  "S",   # flake8-bandit
  "SIM", # flake8-simplify
#  "T20", # flake8-print
  "TID", # flake8-tidy-imports
  "UP",  # pyupgrade
  "W",   # pycodestyle
  "YTT",  # flake8-2020
]

exclude = [
    "__init__.py",
    "setup.py",
]

lint.ignore = [
    "S301",  # pickle
    "S311",  # Standard pseudo-random generators
]

[tool.ruff.lint.pep8-naming]
extend-ignore-names = [
    "X", "X1", "X_train", "X_val", "X_test", "X_predict",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80

[tool.ruff.lint.extend-per-file-ignores]
"test/**" = ["S101", "PLR2004", "ANN"]
"python/example_rmux.py" = ["PLR2004"]
"python/example_maze.py" = ["PLR2004"]
"python/notebooks/example_cartpole.ipynb" = ["E501", "SIM115"]
"python/notebooks/example_maze.ipynb" = ["E501", "PLR2004"]
"python/notebooks/example_regression.ipynb" = ["PLR2004"]
"python/notebooks/example_rmux.ipynb" = ["PLR2004"]
"python/notebooks/example_tuning.ipynb" = ["E501", "ANN201"]

[tool.codespell]
ignore-words-list = [
    "larg",
]
